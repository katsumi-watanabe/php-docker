# Compose fileのバージョン指定
version: '3'
# どんなコンテナを立ち上げるか
services:
 # laravelを動かすコンテナ
 app:
   # どのポートを開いて繋ぐか。下記はコンテナの80番ポートを開いて、ホストの8000番につなぐ
   ports:
     - "8080:80" # localhost:8080
   # 先ほど作ったDockerfileを使って、コンテナをビルドするという指定
   build: ./docker/app
   # コンテナの名前を指定
   container_name: projectname_app
   # コンテナとホスト側のディレクトリを同期する場所の指定。laravelのソースが入る予定の場所
   volumes:
     - ./src:/var/www/html
   # artisanコマンドを実行するディレクトリ
   working_dir: /var/www/html/docker-test
 # MySQLを動かすコンテナ
 db:
   # Docker HubからMySQL5.7の公式イメージをダウンロードしてくる指定
   image: mysql:5.7
   platform: linux/amd64
  #  platform: linux/x86_64 #M1Macはこれを追加しないと動かない
   container_name: projectname_db #.envのDB_HOSTに指定
   # コンテナ内の環境変数を指定。環境変数を渡すとビルド時に設定してくれるDockerイメージがあるので、利用の際はDocker Hubのサイトで確認すると良い
   environment:
     MYSQL_ROOT_PASSWORD: root
     MYSQL_DATABASE: laravel_db #.envのDB_DATABASEに転記
     MYSQL_USER: laravel_user #.envのDB_USERNAMEに転記
     MYSQL_PASSWORD: laravel_pass #.envのDB_PASSWORDに転記
     TZ: 'Asia/Tokyo'
   # 起動時のコマンド
   command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
   # ディレクトリ同期。設定ファイルとMySQLのデータが保存される場所を同期している。コンテナは基本的に起動時に変更されてもコンテナ自体が止まるとデータが消えてしまうため、保存しておきたいものはホストマシンと同期しておく必要がある。
   volumes:
     - ./docker/db/data:/var/lib/mysql
     - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
   ports:
     - 3307:3306 # src側へは3306として公開
   expose:
     - 3307
 # phpMyAdmin
 phpmyadmin:
   image: phpmyadmin
   restart: always
   ports:
     - 8081:80 # localhost:8081
   environment:
     # PMA_HOSTはdb.container_nameで定義したもの
     PMA_HOST: 'projectname_db'
     PMA_USER: 'laravel_user'
     PMA_PASSWORD: 'laravel_pass'
     UPLOAD_LIMIT: 2048M
     MEMORY_LIMIT: 2048M
     MAX_EXECUTION_TIME: 3600
     MAX_INPUT_TIME: 3600
     POST_MAX_SIZE: 2048M
